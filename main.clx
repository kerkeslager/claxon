enum Token {
  End,
}

fn Token_println(Token token) {
  match(token.type) {
    End => {
      print('END');
    }
  }
}

struct Scanner {
  char* source;
  size line;
  bool panic;
}

fn Scanner_init(Scanner* self, char* source) {
  self->source = source;
  self->line = 1;
  self->panic = false;
}

fn Scanner_scan(Scanner* self) {
  match(self->source) {
    '\0' => Token.End,
    _ => assert(false)
  }
}

fn main() {
  let sourceFile = open('main.clx', 'r');
  let source = read(sourceFile);

  Scanner scanner;
  Scanner_init(&scanner, source);

  loop {
    let token = Scanner_scan(&scanner, source);
    Token_println(token);
    if(token.type == Token.End) break;
  }

  nil
}
